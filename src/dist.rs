use utils::{fcmp,Glyph,Iter,approx_equal};

use std::ops::Div;
use std::cmp::Ordering;
use std::cmp::Ordering::{Equal,Greater,Less};
use std::collections::*;
use std::iter::*;
use itertools::Itertools;
use counter::Counter;

type Maybe<T> = Result<T,err::Msg>;

mod err {
    pub type Msg = &'static str;
    pub const PROBABILITY_OUT_OF_BOUNDS:&str =
        "Encountered `probability` less than 0 or greater than 1.";
    pub const INFINITE_SURPRISE:&str = 
        "Encountered infinitely surprising event";
    pub const MATHEMATICAL_PARADOX:&str = 
        "Congratulations, you have broken mathematics.";
    pub const MALFORMED_SURPRISE_CMP:&str =
        "Attempted comparison of malformed surprises.";
}


//Rust's support for newtype ergonomics isn't complete. Some things you get
//For free, and others you need to implement. Forgive this kludginess.
type _Prob = f64;

#[derive(Add,Mul,AddAssign,MulAssign,Debug,Display,From,Clone,Copy,Into)]
pub struct Prob(pub _Prob);
impl Prob {
    fn surprise(self) -> Maybe<f64> {
        let p = self.val();
        match (fcmp(p,0.0), fcmp(p,1.0)) {
            (Less,Less)|(Greater,Greater) => 
                Err(err::PROBABILITY_OUT_OF_BOUNDS),
            (Equal,Less) => 
                Err(err::INFINITE_SURPRISE),
            (Greater,Less)|(Greater,Equal) =>
                Ok(p.recip().log(2.0)),
            _ =>
                Err(err::MATHEMATICAL_PARADOX)
        }
    }
}

trait GetUnderlying<T> {
    fn val(&self) -> T;
}
impl GetUnderlying<_Prob> for Prob {
    fn val(&self) -> _Prob {
        self.0
    }
}

//Completes impl Vector for Prob
impl Div<f64> for Prob {
    type Output = Self;
    fn div(self, other:f64) -> Self {
        Prob(self.val() / other)
    }
}

pub fn binomial_p_estimate(trials:usize, successes:usize) -> Prob {
    let zval = 1.96; //z value for 95% confidence interval
    let naive_p = successes as f64 / trials as f64;
    Prob(
        naive_p 
        -zval 
        *(
            (
                (naive_p * (1.0-naive_p))
                /(trials as f64)
            ).sqrt()
        )
    )
}


trait Pow<T> {
    fn pow(&self,other:T) -> Self;
}
impl Pow<f64> for Prob {
    fn pow(&self,other:_Prob) -> Prob {
        Prob(self.val().powf(other))
    }
}



pub trait Distribution<T:Glyph> {
    fn probabilities(&self) -> &HashMap<T,Prob>;

    fn space_size(&self) -> usize {
        self.probabilities().len()
    }

    fn get(&self, key:&T) -> Prob {
        *self.probabilities()
        .get(key)
        .unwrap_or(&Prob(0.0))
    }

    fn approx_kappa(&self) -> f64 {
        self.probabilities()
        .iter()
        .map(|(_,p)| p.pow(2.0).val())
        .sum()
    }

    fn surprise(&self, events:&[T]) -> Maybe<f64> {
        events
        .iter()
        .map(|e| self.get(e).surprise())
        .fold_results(0.0, |s1,s2| s1+s2)
    }

    fn entropy(&self) -> Maybe<f64> {
        self.probabilities()
        .iter()
        .map(|(_,&p)| 
            if approx_equal(p,Prob(0.0)) {
                Ok(0.0)
            } else {
                p.surprise().map(|s| p.val()*s)
            }
        ).fold_results(0.0, |s1,s2| s1+s2)
    }

    fn redundancy(&self) -> Maybe<f64> {
        self.entropy().map(|e| (self.space_size() as f64).log(2.0) - e)
    }

    fn display(&self) -> String {
        let p_disp = |(i,p):(&T,&Prob)| format!("Item '{}' with probability {}", i, p);
        let items = self.probabilities().iter().map(p_disp);
        once(String::from("Distribution {"))
        .chain(items)
        .intersperse(String::from("\n"))
        .chain(once(String::from("}")))
        .collect()
    }


}

pub fn kappa<'a,T:'a,IT>(v:&IT) -> f64 
where T:    Glyph,
      IT:   Iter<&'a T>
{
    let pairs = |x:usize| (x*(x-1))/2;
    let counts:Counter<T> = 
        v
        .clone() //don't want to exhaust by computing kappa
        .cloned() //else we get a Counter<&T>
        .collect();
    let (samples,coincidences):(usize,usize) =
        counts
        .iter()
        .fold((0,0), |(s,o),(_,n)| (s+n, o+pairs(*n)));
    let opportunities:usize = pairs(samples);
    match opportunities {
        0 => f64::from(0), //fair enough value for this edge case
        _ => coincidences as f64 / opportunities as f64
    }
}



pub fn surprisecmp(sup1:&Maybe<f64>,sup2:&Maybe<f64>) 
-> Ordering {
    use self::err::{INFINITE_SURPRISE, MALFORMED_SURPRISE_CMP};
    match (sup1,sup2) {
        (Ok(x1), Ok(x2)) => fcmp(*x1,*x2),
        (Err(INFINITE_SURPRISE), Ok(_x2)) => Greater,
        (Ok(_x1), Err(INFINITE_SURPRISE)) => Less,
        (Err(INFINITE_SURPRISE), Err(INFINITE_SURPRISE)) => Equal,
        _ => panic!(MALFORMED_SURPRISE_CMP) 
    }
}

//Maybe impl these as From<T> trait?


pub fn from<T:Glyph>(v:&[(T,Prob)]) -> impl Distribution<T> {
    _Distribution {
        probabilities : v.into_iter().cloned().collect::<HashMap<T,Prob>>()
    }
}

pub fn from_sample<T:Glyph>(v:&[T]) -> impl Distribution<T> {
    from( 
        &v
        .iter()
        .cloned() //else we get a Counter<&T>
        .collect::<Counter<T>>()
        .most_common_ordered()
        .into_iter()
        .map(|(x,count)| (
            x,
            Prob(count as f64 / v.len() as f64)
        )).collect::<Vec<(T,Prob)>>()
    )
}

pub fn uniform<T: Glyph>(v:&[T]) -> impl Distribution<T> {
    let p = Prob((v.len() as f64).recip());
    from(&v.iter().cloned().zip(repeat(p)).collect::<Vec<(T,Prob)>>())
}

struct _Distribution<T> where T: Glyph {
    probabilities : HashMap<T,Prob>
}

impl<T> Distribution<T> for _Distribution<T> where T: Glyph {
    fn probabilities(&self) -> &HashMap<T,Prob> {
        &self.probabilities
    }
}

pub mod known {
    use dist::Prob;

    pub const HEX:[(u8,Prob);256] = [
        (b'0', Prob(0.045_455)),
        (b'1', Prob(0.045_455)),
        (b'2', Prob(0.045_455)),
        (b'3', Prob(0.045_455)),
        (b'4', Prob(0.045_455)),
        (b'5', Prob(0.045_455)),
        (b'6', Prob(0.045_455)),
        (b'7', Prob(0.045_455)),
        (b'8', Prob(0.045_455)),
        (b'9', Prob(0.045_455)),
        (b'a', Prob(0.045_455)),
        (b'b', Prob(0.045_455)),
        (b'c', Prob(0.045_455)),
        (b'd', Prob(0.045_455)),
        (b'e', Prob(0.045_455)),
        (b'f', Prob(0.045_455)),
        (b'A', Prob(0.045_455)),
        (b'B', Prob(0.045_455)),
        (b'C', Prob(0.045_455)),
        (b'D', Prob(0.045_455)),
        (b'E', Prob(0.045_455)),
        (b'F', Prob(0.045_455)),
        (b'\x00', Prob(0.000_000)),
        (b'\x01', Prob(0.000_000)),
        (b'\x02', Prob(0.000_000)),
        (b'\x03', Prob(0.000_000)),
        (b'\x04', Prob(0.000_000)),
        (b'\x05', Prob(0.000_000)),
        (b'\x06', Prob(0.000_000)),
        (b'\x07', Prob(0.000_000)),
        (b'\x08', Prob(0.000_000)),
        (b'\x09', Prob(0.000_000)),
        (b'\x0a', Prob(0.000_000)),
        (b'\x0b', Prob(0.000_000)),
        (b'\x0c', Prob(0.000_000)),
        (b'\x0d', Prob(0.000_000)),
        (b'\x0e', Prob(0.000_000)),
        (b'\x0f', Prob(0.000_000)),
        (b'\x10', Prob(0.000_000)),
        (b'\x11', Prob(0.000_000)),
        (b'\x12', Prob(0.000_000)),
        (b'\x13', Prob(0.000_000)),
        (b'\x14', Prob(0.000_000)),
        (b'\x15', Prob(0.000_000)),
        (b'\x16', Prob(0.000_000)),
        (b'\x17', Prob(0.000_000)),
        (b'\x18', Prob(0.000_000)),
        (b'\x19', Prob(0.000_000)),
        (b'\x1a', Prob(0.000_000)),
        (b'\x1b', Prob(0.000_000)),
        (b'\x1c', Prob(0.000_000)),
        (b'\x1d', Prob(0.000_000)),
        (b'\x1e', Prob(0.000_000)),
        (b'\x1f', Prob(0.000_000)),
        (b'\x20', Prob(0.000_000)),
        (b'!', Prob(0.000_000)),
        (b'"', Prob(0.000_000)),
        (b'#', Prob(0.000_000)),
        (b'$', Prob(0.000_000)),
        (b'%', Prob(0.000_000)),
        (b'&', Prob(0.000_000)),
        (b'\x27', Prob(0.000_000)),
        (b'(', Prob(0.000_000)),
        (b')', Prob(0.000_000)),
        (b'*', Prob(0.000_000)),
        (b'+', Prob(0.000_000)),
        (b',', Prob(0.000_000)),
        (b'-', Prob(0.000_000)),
        (b'.', Prob(0.000_000)),
        (b'/', Prob(0.000_000)),
        (b':', Prob(0.000_000)),
        (b';', Prob(0.000_000)),
        (b'<', Prob(0.000_000)),
        (b'=', Prob(0.000_000)),
        (b'>', Prob(0.000_000)),
        (b'?', Prob(0.000_000)),
        (b'@', Prob(0.000_000)),
        (b'G', Prob(0.000_000)),
        (b'H', Prob(0.000_000)),
        (b'I', Prob(0.000_000)),
        (b'J', Prob(0.000_000)),
        (b'K', Prob(0.000_000)),
        (b'L', Prob(0.000_000)),
        (b'M', Prob(0.000_000)),
        (b'N', Prob(0.000_000)),
        (b'O', Prob(0.000_000)),
        (b'P', Prob(0.000_000)),
        (b'Q', Prob(0.000_000)),
        (b'R', Prob(0.000_000)),
        (b'S', Prob(0.000_000)),
        (b'T', Prob(0.000_000)),
        (b'U', Prob(0.000_000)),
        (b'V', Prob(0.000_000)),
        (b'W', Prob(0.000_000)),
        (b'X', Prob(0.000_000)),
        (b'Y', Prob(0.000_000)),
        (b'Z', Prob(0.000_000)),
        (b'[', Prob(0.000_000)),
        (b'\x5c', Prob(0.000_000)),
        (b']', Prob(0.000_000)),
        (b'^', Prob(0.000_000)),
        (b'_', Prob(0.000_000)),
        (b'`', Prob(0.000_000)),
        (b'g', Prob(0.000_000)),
        (b'h', Prob(0.000_000)),
        (b'i', Prob(0.000_000)),
        (b'j', Prob(0.000_000)),
        (b'k', Prob(0.000_000)),
        (b'l', Prob(0.000_000)),
        (b'm', Prob(0.000_000)),
        (b'n', Prob(0.000_000)),
        (b'o', Prob(0.000_000)),
        (b'p', Prob(0.000_000)),
        (b'q', Prob(0.000_000)),
        (b'r', Prob(0.000_000)),
        (b's', Prob(0.000_000)),
        (b't', Prob(0.000_000)),
        (b'u', Prob(0.000_000)),
        (b'v', Prob(0.000_000)),
        (b'w', Prob(0.000_000)),
        (b'x', Prob(0.000_000)),
        (b'y', Prob(0.000_000)),
        (b'z', Prob(0.000_000)),
        (b'{', Prob(0.000_000)),
        (b'|', Prob(0.000_000)),
        (b'}', Prob(0.000_000)),
        (b'~', Prob(0.000_000)),
        (b'\x7f', Prob(0.000_000)),
        (b'\x80', Prob(0.000_000)),
        (b'\x81', Prob(0.000_000)),
        (b'\x82', Prob(0.000_000)),
        (b'\x83', Prob(0.000_000)),
        (b'\x84', Prob(0.000_000)),
        (b'\x85', Prob(0.000_000)),
        (b'\x86', Prob(0.000_000)),
        (b'\x87', Prob(0.000_000)),
        (b'\x88', Prob(0.000_000)),
        (b'\x89', Prob(0.000_000)),
        (b'\x8a', Prob(0.000_000)),
        (b'\x8b', Prob(0.000_000)),
        (b'\x8c', Prob(0.000_000)),
        (b'\x8d', Prob(0.000_000)),
        (b'\x8e', Prob(0.000_000)),
        (b'\x8f', Prob(0.000_000)),
        (b'\x90', Prob(0.000_000)),
        (b'\x91', Prob(0.000_000)),
        (b'\x92', Prob(0.000_000)),
        (b'\x93', Prob(0.000_000)),
        (b'\x94', Prob(0.000_000)),
        (b'\x95', Prob(0.000_000)),
        (b'\x96', Prob(0.000_000)),
        (b'\x97', Prob(0.000_000)),
        (b'\x98', Prob(0.000_000)),
        (b'\x99', Prob(0.000_000)),
        (b'\x9a', Prob(0.000_000)),
        (b'\x9b', Prob(0.000_000)),
        (b'\x9c', Prob(0.000_000)),
        (b'\x9d', Prob(0.000_000)),
        (b'\x9e', Prob(0.000_000)),
        (b'\x9f', Prob(0.000_000)),
        (b'\xa0', Prob(0.000_000)),
        (b'\xa1', Prob(0.000_000)),
        (b'\xa2', Prob(0.000_000)),
        (b'\xa3', Prob(0.000_000)),
        (b'\xa4', Prob(0.000_000)),
        (b'\xa5', Prob(0.000_000)),
        (b'\xa6', Prob(0.000_000)),
        (b'\xa7', Prob(0.000_000)),
        (b'\xa8', Prob(0.000_000)),
        (b'\xa9', Prob(0.000_000)),
        (b'\xaa', Prob(0.000_000)),
        (b'\xab', Prob(0.000_000)),
        (b'\xac', Prob(0.000_000)),
        (b'\xad', Prob(0.000_000)),
        (b'\xae', Prob(0.000_000)),
        (b'\xaf', Prob(0.000_000)),
        (b'\xb0', Prob(0.000_000)),
        (b'\xb1', Prob(0.000_000)),
        (b'\xb2', Prob(0.000_000)),
        (b'\xb3', Prob(0.000_000)),
        (b'\xb4', Prob(0.000_000)),
        (b'\xb5', Prob(0.000_000)),
        (b'\xb6', Prob(0.000_000)),
        (b'\xb7', Prob(0.000_000)),
        (b'\xb8', Prob(0.000_000)),
        (b'\xb9', Prob(0.000_000)),
        (b'\xba', Prob(0.000_000)),
        (b'\xbb', Prob(0.000_000)),
        (b'\xbc', Prob(0.000_000)),
        (b'\xbd', Prob(0.000_000)),
        (b'\xbe', Prob(0.000_000)),
        (b'\xbf', Prob(0.000_000)),
        (b'\xc0', Prob(0.000_000)),
        (b'\xc1', Prob(0.000_000)),
        (b'\xc2', Prob(0.000_000)),
        (b'\xc3', Prob(0.000_000)),
        (b'\xc4', Prob(0.000_000)),
        (b'\xc5', Prob(0.000_000)),
        (b'\xc6', Prob(0.000_000)),
        (b'\xc7', Prob(0.000_000)),
        (b'\xc8', Prob(0.000_000)),
        (b'\xc9', Prob(0.000_000)),
        (b'\xca', Prob(0.000_000)),
        (b'\xcb', Prob(0.000_000)),
        (b'\xcc', Prob(0.000_000)),
        (b'\xcd', Prob(0.000_000)),
        (b'\xce', Prob(0.000_000)),
        (b'\xcf', Prob(0.000_000)),
        (b'\xd0', Prob(0.000_000)),
        (b'\xd1', Prob(0.000_000)),
        (b'\xd2', Prob(0.000_000)),
        (b'\xd3', Prob(0.000_000)),
        (b'\xd4', Prob(0.000_000)),
        (b'\xd5', Prob(0.000_000)),
        (b'\xd6', Prob(0.000_000)),
        (b'\xd7', Prob(0.000_000)),
        (b'\xd8', Prob(0.000_000)),
        (b'\xd9', Prob(0.000_000)),
        (b'\xda', Prob(0.000_000)),
        (b'\xdb', Prob(0.000_000)),
        (b'\xdc', Prob(0.000_000)),
        (b'\xdd', Prob(0.000_000)),
        (b'\xde', Prob(0.000_000)),
        (b'\xdf', Prob(0.000_000)),
        (b'\xe0', Prob(0.000_000)),
        (b'\xe1', Prob(0.000_000)),
        (b'\xe2', Prob(0.000_000)),
        (b'\xe3', Prob(0.000_000)),
        (b'\xe4', Prob(0.000_000)),
        (b'\xe5', Prob(0.000_000)),
        (b'\xe6', Prob(0.000_000)),
        (b'\xe7', Prob(0.000_000)),
        (b'\xe8', Prob(0.000_000)),
        (b'\xe9', Prob(0.000_000)),
        (b'\xea', Prob(0.000_000)),
        (b'\xeb', Prob(0.000_000)),
        (b'\xec', Prob(0.000_000)),
        (b'\xed', Prob(0.000_000)),
        (b'\xee', Prob(0.000_000)),
        (b'\xef', Prob(0.000_000)),
        (b'\xf0', Prob(0.000_000)),
        (b'\xf1', Prob(0.000_000)),
        (b'\xf2', Prob(0.000_000)),
        (b'\xf3', Prob(0.000_000)),
        (b'\xf4', Prob(0.000_000)),
        (b'\xf5', Prob(0.000_000)),
        (b'\xf6', Prob(0.000_000)),
        (b'\xf7', Prob(0.000_000)),
        (b'\xf8', Prob(0.000_000)),
        (b'\xf9', Prob(0.000_000)),
        (b'\xfa', Prob(0.000_000)),
        (b'\xfb', Prob(0.000_000)),
        (b'\xfc', Prob(0.000_000)),
        (b'\xfd', Prob(0.000_000)),
        (b'\xfe', Prob(0.000_000)),
        (b'\xff', Prob(0.000_000)),
    ];



    pub const BASE64:[(u8,Prob);256] = [
        (b'A', Prob(0.015_625)),
        (b'B', Prob(0.015_625)),
        (b'C', Prob(0.015_625)),
        (b'D', Prob(0.015_625)),
        (b'E', Prob(0.015_625)),
        (b'F', Prob(0.015_625)),
        (b'G', Prob(0.015_625)),
        (b'H', Prob(0.015_625)),
        (b'I', Prob(0.015_625)),
        (b'J', Prob(0.015_625)),
        (b'K', Prob(0.015_625)),
        (b'L', Prob(0.015_625)),
        (b'M', Prob(0.015_625)),
        (b'N', Prob(0.015_625)),
        (b'O', Prob(0.015_625)),
        (b'P', Prob(0.015_625)),
        (b'Q', Prob(0.015_625)),
        (b'R', Prob(0.015_625)),
        (b'S', Prob(0.015_625)),
        (b'T', Prob(0.015_625)),
        (b'U', Prob(0.015_625)),
        (b'V', Prob(0.015_625)),
        (b'W', Prob(0.015_625)),
        (b'X', Prob(0.015_625)),
        (b'Y', Prob(0.015_625)),
        (b'Z', Prob(0.015_625)),
        (b'a', Prob(0.015_625)),
        (b'b', Prob(0.015_625)),
        (b'c', Prob(0.015_625)),
        (b'd', Prob(0.015_625)),
        (b'e', Prob(0.015_625)),
        (b'f', Prob(0.015_625)),
        (b'g', Prob(0.015_625)),
        (b'h', Prob(0.015_625)),
        (b'i', Prob(0.015_625)),
        (b'j', Prob(0.015_625)),
        (b'k', Prob(0.015_625)),
        (b'l', Prob(0.015_625)),
        (b'm', Prob(0.015_625)),
        (b'n', Prob(0.015_625)),
        (b'o', Prob(0.015_625)),
        (b'p', Prob(0.015_625)),
        (b'q', Prob(0.015_625)),
        (b'r', Prob(0.015_625)),
        (b's', Prob(0.015_625)),
        (b't', Prob(0.015_625)),
        (b'u', Prob(0.015_625)),
        (b'v', Prob(0.015_625)),
        (b'w', Prob(0.015_625)),
        (b'x', Prob(0.015_625)),
        (b'y', Prob(0.015_625)),
        (b'z', Prob(0.015_625)),
        (b'0', Prob(0.015_625)),
        (b'1', Prob(0.015_625)),
        (b'2', Prob(0.015_625)),
        (b'3', Prob(0.015_625)),
        (b'4', Prob(0.015_625)),
        (b'5', Prob(0.015_625)),
        (b'6', Prob(0.015_625)),
        (b'7', Prob(0.015_625)),
        (b'8', Prob(0.015_625)),
        (b'9', Prob(0.015_625)),
        (b'/', Prob(0.015_625)),
        (b'+', Prob(0.015_625)),
        (b'\x00', Prob(0.000_000)),
        (b'\x01', Prob(0.000_000)),
        (b'\x02', Prob(0.000_000)),
        (b'\x03', Prob(0.000_000)),
        (b'\x04', Prob(0.000_000)),
        (b'\x05', Prob(0.000_000)),
        (b'\x06', Prob(0.000_000)),
        (b'\x07', Prob(0.000_000)),
        (b'\x08', Prob(0.000_000)),
        (b'\x09', Prob(0.000_000)),
        (b'\x0a', Prob(0.000_000)),
        (b'\x0b', Prob(0.000_000)),
        (b'\x0c', Prob(0.000_000)),
        (b'\x0d', Prob(0.000_000)),
        (b'\x0e', Prob(0.000_000)),
        (b'\x0f', Prob(0.000_000)),
        (b'\x10', Prob(0.000_000)),
        (b'\x11', Prob(0.000_000)),
        (b'\x12', Prob(0.000_000)),
        (b'\x13', Prob(0.000_000)),
        (b'\x14', Prob(0.000_000)),
        (b'\x15', Prob(0.000_000)),
        (b'\x16', Prob(0.000_000)),
        (b'\x17', Prob(0.000_000)),
        (b'\x18', Prob(0.000_000)),
        (b'\x19', Prob(0.000_000)),
        (b'\x1a', Prob(0.000_000)),
        (b'\x1b', Prob(0.000_000)),
        (b'\x1c', Prob(0.000_000)),
        (b'\x1d', Prob(0.000_000)),
        (b'\x1e', Prob(0.000_000)),
        (b'\x1f', Prob(0.000_000)),
        (b'\x20', Prob(0.000_000)),
        (b'!', Prob(0.000_000)),
        (b'"', Prob(0.000_000)),
        (b'#', Prob(0.000_000)),
        (b'$', Prob(0.000_000)),
        (b'%', Prob(0.000_000)),
        (b'&', Prob(0.000_000)),
        (b'\x27', Prob(0.000_000)),
        (b'(', Prob(0.000_000)),
        (b')', Prob(0.000_000)),
        (b'*', Prob(0.000_000)),
        (b',', Prob(0.000_000)),
        (b'-', Prob(0.000_000)),
        (b'.', Prob(0.000_000)),
        (b':', Prob(0.000_000)),
        (b';', Prob(0.000_000)),
        (b'<', Prob(0.000_000)),
        (b'=', Prob(0.000_000)),
        (b'>', Prob(0.000_000)),
        (b'?', Prob(0.000_000)),
        (b'@', Prob(0.000_000)),
        (b'[', Prob(0.000_000)),
        (b'\x5c', Prob(0.000_000)),
        (b']', Prob(0.000_000)),
        (b'^', Prob(0.000_000)),
        (b'_', Prob(0.000_000)),
        (b'`', Prob(0.000_000)),
        (b'{', Prob(0.000_000)),
        (b'|', Prob(0.000_000)),
        (b'}', Prob(0.000_000)),
        (b'~', Prob(0.000_000)),
        (b'\x7f', Prob(0.000_000)),
        (b'\x80', Prob(0.000_000)),
        (b'\x81', Prob(0.000_000)),
        (b'\x82', Prob(0.000_000)),
        (b'\x83', Prob(0.000_000)),
        (b'\x84', Prob(0.000_000)),
        (b'\x85', Prob(0.000_000)),
        (b'\x86', Prob(0.000_000)),
        (b'\x87', Prob(0.000_000)),
        (b'\x88', Prob(0.000_000)),
        (b'\x89', Prob(0.000_000)),
        (b'\x8a', Prob(0.000_000)),
        (b'\x8b', Prob(0.000_000)),
        (b'\x8c', Prob(0.000_000)),
        (b'\x8d', Prob(0.000_000)),
        (b'\x8e', Prob(0.000_000)),
        (b'\x8f', Prob(0.000_000)),
        (b'\x90', Prob(0.000_000)),
        (b'\x91', Prob(0.000_000)),
        (b'\x92', Prob(0.000_000)),
        (b'\x93', Prob(0.000_000)),
        (b'\x94', Prob(0.000_000)),
        (b'\x95', Prob(0.000_000)),
        (b'\x96', Prob(0.000_000)),
        (b'\x97', Prob(0.000_000)),
        (b'\x98', Prob(0.000_000)),
        (b'\x99', Prob(0.000_000)),
        (b'\x9a', Prob(0.000_000)),
        (b'\x9b', Prob(0.000_000)),
        (b'\x9c', Prob(0.000_000)),
        (b'\x9d', Prob(0.000_000)),
        (b'\x9e', Prob(0.000_000)),
        (b'\x9f', Prob(0.000_000)),
        (b'\xa0', Prob(0.000_000)),
        (b'\xa1', Prob(0.000_000)),
        (b'\xa2', Prob(0.000_000)),
        (b'\xa3', Prob(0.000_000)),
        (b'\xa4', Prob(0.000_000)),
        (b'\xa5', Prob(0.000_000)),
        (b'\xa6', Prob(0.000_000)),
        (b'\xa7', Prob(0.000_000)),
        (b'\xa8', Prob(0.000_000)),
        (b'\xa9', Prob(0.000_000)),
        (b'\xaa', Prob(0.000_000)),
        (b'\xab', Prob(0.000_000)),
        (b'\xac', Prob(0.000_000)),
        (b'\xad', Prob(0.000_000)),
        (b'\xae', Prob(0.000_000)),
        (b'\xaf', Prob(0.000_000)),
        (b'\xb0', Prob(0.000_000)),
        (b'\xb1', Prob(0.000_000)),
        (b'\xb2', Prob(0.000_000)),
        (b'\xb3', Prob(0.000_000)),
        (b'\xb4', Prob(0.000_000)),
        (b'\xb5', Prob(0.000_000)),
        (b'\xb6', Prob(0.000_000)),
        (b'\xb7', Prob(0.000_000)),
        (b'\xb8', Prob(0.000_000)),
        (b'\xb9', Prob(0.000_000)),
        (b'\xba', Prob(0.000_000)),
        (b'\xbb', Prob(0.000_000)),
        (b'\xbc', Prob(0.000_000)),
        (b'\xbd', Prob(0.000_000)),
        (b'\xbe', Prob(0.000_000)),
        (b'\xbf', Prob(0.000_000)),
        (b'\xc0', Prob(0.000_000)),
        (b'\xc1', Prob(0.000_000)),
        (b'\xc2', Prob(0.000_000)),
        (b'\xc3', Prob(0.000_000)),
        (b'\xc4', Prob(0.000_000)),
        (b'\xc5', Prob(0.000_000)),
        (b'\xc6', Prob(0.000_000)),
        (b'\xc7', Prob(0.000_000)),
        (b'\xc8', Prob(0.000_000)),
        (b'\xc9', Prob(0.000_000)),
        (b'\xca', Prob(0.000_000)),
        (b'\xcb', Prob(0.000_000)),
        (b'\xcc', Prob(0.000_000)),
        (b'\xcd', Prob(0.000_000)),
        (b'\xce', Prob(0.000_000)),
        (b'\xcf', Prob(0.000_000)),
        (b'\xd0', Prob(0.000_000)),
        (b'\xd1', Prob(0.000_000)),
        (b'\xd2', Prob(0.000_000)),
        (b'\xd3', Prob(0.000_000)),
        (b'\xd4', Prob(0.000_000)),
        (b'\xd5', Prob(0.000_000)),
        (b'\xd6', Prob(0.000_000)),
        (b'\xd7', Prob(0.000_000)),
        (b'\xd8', Prob(0.000_000)),
        (b'\xd9', Prob(0.000_000)),
        (b'\xda', Prob(0.000_000)),
        (b'\xdb', Prob(0.000_000)),
        (b'\xdc', Prob(0.000_000)),
        (b'\xdd', Prob(0.000_000)),
        (b'\xde', Prob(0.000_000)),
        (b'\xdf', Prob(0.000_000)),
        (b'\xe0', Prob(0.000_000)),
        (b'\xe1', Prob(0.000_000)),
        (b'\xe2', Prob(0.000_000)),
        (b'\xe3', Prob(0.000_000)),
        (b'\xe4', Prob(0.000_000)),
        (b'\xe5', Prob(0.000_000)),
        (b'\xe6', Prob(0.000_000)),
        (b'\xe7', Prob(0.000_000)),
        (b'\xe8', Prob(0.000_000)),
        (b'\xe9', Prob(0.000_000)),
        (b'\xea', Prob(0.000_000)),
        (b'\xeb', Prob(0.000_000)),
        (b'\xec', Prob(0.000_000)),
        (b'\xed', Prob(0.000_000)),
        (b'\xee', Prob(0.000_000)),
        (b'\xef', Prob(0.000_000)),
        (b'\xf0', Prob(0.000_000)),
        (b'\xf1', Prob(0.000_000)),
        (b'\xf2', Prob(0.000_000)),
        (b'\xf3', Prob(0.000_000)),
        (b'\xf4', Prob(0.000_000)),
        (b'\xf5', Prob(0.000_000)),
        (b'\xf6', Prob(0.000_000)),
        (b'\xf7', Prob(0.000_000)),
        (b'\xf8', Prob(0.000_000)),
        (b'\xf9', Prob(0.000_000)),
        (b'\xfa', Prob(0.000_000)),
        (b'\xfb', Prob(0.000_000)),
        (b'\xfc', Prob(0.000_000)),
        (b'\xfd', Prob(0.000_000)),
        (b'\xfe', Prob(0.000_000)),
        (b'\xff', Prob(0.000_000)),
    ];



    pub const SHAKESPEARE:[(u8,Prob);256] = [
        (b'\x20', Prob(0.237_062)),
        (b'e', Prob(0.074_131)),
        (b't', Prob(0.053_126)),
        (b'o', Prob(0.051_554)),
        (b'a', Prob(0.044_825)),
        (b'h', Prob(0.040_014)),
        (b'n', Prob(0.039_560)),
        (b's', Prob(0.039_386)),
        (b'r', Prob(0.038_272)),
        (b'i', Prob(0.036_309)),
        (b'l', Prob(0.026_778)),
        (b'd', Prob(0.024_510)),
        (b'u', Prob(0.021_036)),
        (b'm', Prob(0.017_511)),
        (b'y', Prob(0.015_623)),
        (b',', Prob(0.015_238)),
        (b'.', Prob(0.014_295)),
        (b'w', Prob(0.013_355)),
        (b'f', Prob(0.012_605)),
        (b'c', Prob(0.012_218)),
        (b'\x0a', Prob(0.011_401)),
        (b'\x0d', Prob(0.011_401)),
        (b'g', Prob(0.010_449)),
        (b'I', Prob(0.010_224)),
        (b'b', Prob(0.008_527)),
        (b'p', Prob(0.008_524)),
        (b'A', Prob(0.008_150)),
        (b'E', Prob(0.007_802)),
        (b'T', Prob(0.007_292)),
        (b'S', Prob(0.006_231)),
        (b'v', Prob(0.006_227)),
        (b'O', Prob(0.006_084)),
        (b'\x27', Prob(0.005_692)),
        (b'k', Prob(0.005_352)),
        (b'R', Prob(0.005_308)),
        (b'N', Prob(0.005_009)),
        (b'L', Prob(0.004_371)),
        (b'C', Prob(0.003_938)),
        (b'H', Prob(0.003_382)),
        (b';', Prob(0.003_151)),
        (b'W', Prob(0.003_022)),
        (b'M', Prob(0.002_908)),
        (b'D', Prob(0.002_873)),
        (b'B', Prob(0.002_824)),
        (b'U', Prob(0.002_589)),
        (b'P', Prob(0.002_187)),
        (b'F', Prob(0.002_146)),
        (b'G', Prob(0.002_045)),
        (b'?', Prob(0.001_919)),
        (b'Y', Prob(0.001_667)),
        (b'!', Prob(0.001_620)),
        (b'-', Prob(0.001_479)),
        (b'K', Prob(0.001_135)),
        (b'x', Prob(0.000_859)),
        (b'V', Prob(0.000_656)),
        (b'j', Prob(0.000_497)),
        (b'q', Prob(0.000_440)),
        (b'[', Prob(0.000_382)),
        (b']', Prob(0.000_381)),
        (b'J', Prob(0.000_379)),
        (b':', Prob(0.000_335)),
        (b'Q', Prob(0.000_216)),
        (b'z', Prob(0.000_201)),
        (b'9', Prob(0.000_174)),
        (b'1', Prob(0.000_170)),
        (b')', Prob(0.000_115)),
        (b'(', Prob(0.000_115)),
        (b'X', Prob(0.000_111)),
        (b'Z', Prob(0.000_097)),
        (b'"', Prob(0.000_086)),
        (b'<', Prob(0.000_086)),
        (b'>', Prob(0.000_081)),
        (b'2', Prob(0.000_067)),
        (b'3', Prob(0.000_060)),
        (b'0', Prob(0.000_055)),
        (b'4', Prob(0.000_017)),
        (b'5', Prob(0.000_015)),
        (b'_', Prob(0.000_013)),
        (b'*', Prob(0.000_012)),
        (b'6', Prob(0.000_012)),
        (b'7', Prob(0.000_008)),
        (b'8', Prob(0.000_007)),
        (b'|', Prob(0.000_006)),
        (b'&', Prob(0.000_004)),
        (b'@', Prob(0.000_001)),
        (b'/', Prob(0.000_001)),
        (b'}', Prob(0.000_000)),
        (b'`', Prob(0.000_000)),
        (b'#', Prob(0.000_000)),
        (b'~', Prob(0.000_000)),
        (b'%', Prob(0.000_000)),
        (b'=', Prob(0.000_000)),
        (b'\x00', Prob(0.000_000)),
        (b'\x01', Prob(0.000_000)),
        (b'\x02', Prob(0.000_000)),
        (b'\x03', Prob(0.000_000)),
        (b'\x04', Prob(0.000_000)),
        (b'\x05', Prob(0.000_000)),
        (b'\x06', Prob(0.000_000)),
        (b'\x07', Prob(0.000_000)),
        (b'\x08', Prob(0.000_000)),
        (b'\x09', Prob(0.000_000)),
        (b'\x0b', Prob(0.000_000)),
        (b'\x0c', Prob(0.000_000)),
        (b'\x0e', Prob(0.000_000)),
        (b'\x0f', Prob(0.000_000)),
        (b'\x10', Prob(0.000_000)),
        (b'\x11', Prob(0.000_000)),
        (b'\x12', Prob(0.000_000)),
        (b'\x13', Prob(0.000_000)),
        (b'\x14', Prob(0.000_000)),
        (b'\x15', Prob(0.000_000)),
        (b'\x16', Prob(0.000_000)),
        (b'\x17', Prob(0.000_000)),
        (b'\x18', Prob(0.000_000)),
        (b'\x19', Prob(0.000_000)),
        (b'\x1a', Prob(0.000_000)),
        (b'\x1b', Prob(0.000_000)),
        (b'\x1c', Prob(0.000_000)),
        (b'\x1d', Prob(0.000_000)),
        (b'\x1e', Prob(0.000_000)),
        (b'\x1f', Prob(0.000_000)),
        (b'$', Prob(0.000_000)),
        (b'+', Prob(0.000_000)),
        (b'\x5c', Prob(0.000_000)),
        (b'^', Prob(0.000_000)),
        (b'{', Prob(0.000_000)),
        (b'\x7f', Prob(0.000_000)),
        (b'\x80', Prob(0.000_000)),
        (b'\x81', Prob(0.000_000)),
        (b'\x82', Prob(0.000_000)),
        (b'\x83', Prob(0.000_000)),
        (b'\x84', Prob(0.000_000)),
        (b'\x85', Prob(0.000_000)),
        (b'\x86', Prob(0.000_000)),
        (b'\x87', Prob(0.000_000)),
        (b'\x88', Prob(0.000_000)),
        (b'\x89', Prob(0.000_000)),
        (b'\x8a', Prob(0.000_000)),
        (b'\x8b', Prob(0.000_000)),
        (b'\x8c', Prob(0.000_000)),
        (b'\x8d', Prob(0.000_000)),
        (b'\x8e', Prob(0.000_000)),
        (b'\x8f', Prob(0.000_000)),
        (b'\x90', Prob(0.000_000)),
        (b'\x91', Prob(0.000_000)),
        (b'\x92', Prob(0.000_000)),
        (b'\x93', Prob(0.000_000)),
        (b'\x94', Prob(0.000_000)),
        (b'\x95', Prob(0.000_000)),
        (b'\x96', Prob(0.000_000)),
        (b'\x97', Prob(0.000_000)),
        (b'\x98', Prob(0.000_000)),
        (b'\x99', Prob(0.000_000)),
        (b'\x9a', Prob(0.000_000)),
        (b'\x9b', Prob(0.000_000)),
        (b'\x9c', Prob(0.000_000)),
        (b'\x9d', Prob(0.000_000)),
        (b'\x9e', Prob(0.000_000)),
        (b'\x9f', Prob(0.000_000)),
        (b'\xa0', Prob(0.000_000)),
        (b'\xa1', Prob(0.000_000)),
        (b'\xa2', Prob(0.000_000)),
        (b'\xa3', Prob(0.000_000)),
        (b'\xa4', Prob(0.000_000)),
        (b'\xa5', Prob(0.000_000)),
        (b'\xa6', Prob(0.000_000)),
        (b'\xa7', Prob(0.000_000)),
        (b'\xa8', Prob(0.000_000)),
        (b'\xa9', Prob(0.000_000)),
        (b'\xaa', Prob(0.000_000)),
        (b'\xab', Prob(0.000_000)),
        (b'\xac', Prob(0.000_000)),
        (b'\xad', Prob(0.000_000)),
        (b'\xae', Prob(0.000_000)),
        (b'\xaf', Prob(0.000_000)),
        (b'\xb0', Prob(0.000_000)),
        (b'\xb1', Prob(0.000_000)),
        (b'\xb2', Prob(0.000_000)),
        (b'\xb3', Prob(0.000_000)),
        (b'\xb4', Prob(0.000_000)),
        (b'\xb5', Prob(0.000_000)),
        (b'\xb6', Prob(0.000_000)),
        (b'\xb7', Prob(0.000_000)),
        (b'\xb8', Prob(0.000_000)),
        (b'\xb9', Prob(0.000_000)),
        (b'\xba', Prob(0.000_000)),
        (b'\xbb', Prob(0.000_000)),
        (b'\xbc', Prob(0.000_000)),
        (b'\xbd', Prob(0.000_000)),
        (b'\xbe', Prob(0.000_000)),
        (b'\xbf', Prob(0.000_000)),
        (b'\xc0', Prob(0.000_000)),
        (b'\xc1', Prob(0.000_000)),
        (b'\xc2', Prob(0.000_000)),
        (b'\xc3', Prob(0.000_000)),
        (b'\xc4', Prob(0.000_000)),
        (b'\xc5', Prob(0.000_000)),
        (b'\xc6', Prob(0.000_000)),
        (b'\xc7', Prob(0.000_000)),
        (b'\xc8', Prob(0.000_000)),
        (b'\xc9', Prob(0.000_000)),
        (b'\xca', Prob(0.000_000)),
        (b'\xcb', Prob(0.000_000)),
        (b'\xcc', Prob(0.000_000)),
        (b'\xcd', Prob(0.000_000)),
        (b'\xce', Prob(0.000_000)),
        (b'\xcf', Prob(0.000_000)),
        (b'\xd0', Prob(0.000_000)),
        (b'\xd1', Prob(0.000_000)),
        (b'\xd2', Prob(0.000_000)),
        (b'\xd3', Prob(0.000_000)),
        (b'\xd4', Prob(0.000_000)),
        (b'\xd5', Prob(0.000_000)),
        (b'\xd6', Prob(0.000_000)),
        (b'\xd7', Prob(0.000_000)),
        (b'\xd8', Prob(0.000_000)),
        (b'\xd9', Prob(0.000_000)),
        (b'\xda', Prob(0.000_000)),
        (b'\xdb', Prob(0.000_000)),
        (b'\xdc', Prob(0.000_000)),
        (b'\xdd', Prob(0.000_000)),
        (b'\xde', Prob(0.000_000)),
        (b'\xdf', Prob(0.000_000)),
        (b'\xe0', Prob(0.000_000)),
        (b'\xe1', Prob(0.000_000)),
        (b'\xe2', Prob(0.000_000)),
        (b'\xe3', Prob(0.000_000)),
        (b'\xe4', Prob(0.000_000)),
        (b'\xe5', Prob(0.000_000)),
        (b'\xe6', Prob(0.000_000)),
        (b'\xe7', Prob(0.000_000)),
        (b'\xe8', Prob(0.000_000)),
        (b'\xe9', Prob(0.000_000)),
        (b'\xea', Prob(0.000_000)),
        (b'\xeb', Prob(0.000_000)),
        (b'\xec', Prob(0.000_000)),
        (b'\xed', Prob(0.000_000)),
        (b'\xee', Prob(0.000_000)),
        (b'\xef', Prob(0.000_000)),
        (b'\xf0', Prob(0.000_000)),
        (b'\xf1', Prob(0.000_000)),
        (b'\xf2', Prob(0.000_000)),
        (b'\xf3', Prob(0.000_000)),
        (b'\xf4', Prob(0.000_000)),
        (b'\xf5', Prob(0.000_000)),
        (b'\xf6', Prob(0.000_000)),
        (b'\xf7', Prob(0.000_000)),
        (b'\xf8', Prob(0.000_000)),
        (b'\xf9', Prob(0.000_000)),
        (b'\xfa', Prob(0.000_000)),
        (b'\xfb', Prob(0.000_000)),
        (b'\xfc', Prob(0.000_000)),
        (b'\xfd', Prob(0.000_000)),
        (b'\xfe', Prob(0.000_000)),
        (b'\xff', Prob(0.000_000)),
    ];



    pub const UNIFORM:[(u8,Prob);256] = [
        (b'\x00', Prob(0.003_906)),
        (b'\x01', Prob(0.003_906)),
        (b'\x02', Prob(0.003_906)),
        (b'\x03', Prob(0.003_906)),
        (b'\x04', Prob(0.003_906)),
        (b'\x05', Prob(0.003_906)),
        (b'\x06', Prob(0.003_906)),
        (b'\x07', Prob(0.003_906)),
        (b'\x08', Prob(0.003_906)),
        (b'\x09', Prob(0.003_906)),
        (b'\x0a', Prob(0.003_906)),
        (b'\x0b', Prob(0.003_906)),
        (b'\x0c', Prob(0.003_906)),
        (b'\x0d', Prob(0.003_906)),
        (b'\x0e', Prob(0.003_906)),
        (b'\x0f', Prob(0.003_906)),
        (b'\x10', Prob(0.003_906)),
        (b'\x11', Prob(0.003_906)),
        (b'\x12', Prob(0.003_906)),
        (b'\x13', Prob(0.003_906)),
        (b'\x14', Prob(0.003_906)),
        (b'\x15', Prob(0.003_906)),
        (b'\x16', Prob(0.003_906)),
        (b'\x17', Prob(0.003_906)),
        (b'\x18', Prob(0.003_906)),
        (b'\x19', Prob(0.003_906)),
        (b'\x1a', Prob(0.003_906)),
        (b'\x1b', Prob(0.003_906)),
        (b'\x1c', Prob(0.003_906)),
        (b'\x1d', Prob(0.003_906)),
        (b'\x1e', Prob(0.003_906)),
        (b'\x1f', Prob(0.003_906)),
        (b'\x20', Prob(0.003_906)),
        (b'!', Prob(0.003_906)),
        (b'"', Prob(0.003_906)),
        (b'#', Prob(0.003_906)),
        (b'$', Prob(0.003_906)),
        (b'%', Prob(0.003_906)),
        (b'&', Prob(0.003_906)),
        (b'\x27', Prob(0.003_906)),
        (b'(', Prob(0.003_906)),
        (b')', Prob(0.003_906)),
        (b'*', Prob(0.003_906)),
        (b'+', Prob(0.003_906)),
        (b',', Prob(0.003_906)),
        (b'-', Prob(0.003_906)),
        (b'.', Prob(0.003_906)),
        (b'/', Prob(0.003_906)),
        (b'0', Prob(0.003_906)),
        (b'1', Prob(0.003_906)),
        (b'2', Prob(0.003_906)),
        (b'3', Prob(0.003_906)),
        (b'4', Prob(0.003_906)),
        (b'5', Prob(0.003_906)),
        (b'6', Prob(0.003_906)),
        (b'7', Prob(0.003_906)),
        (b'8', Prob(0.003_906)),
        (b'9', Prob(0.003_906)),
        (b':', Prob(0.003_906)),
        (b';', Prob(0.003_906)),
        (b'<', Prob(0.003_906)),
        (b'=', Prob(0.003_906)),
        (b'>', Prob(0.003_906)),
        (b'?', Prob(0.003_906)),
        (b'@', Prob(0.003_906)),
        (b'A', Prob(0.003_906)),
        (b'B', Prob(0.003_906)),
        (b'C', Prob(0.003_906)),
        (b'D', Prob(0.003_906)),
        (b'E', Prob(0.003_906)),
        (b'F', Prob(0.003_906)),
        (b'G', Prob(0.003_906)),
        (b'H', Prob(0.003_906)),
        (b'I', Prob(0.003_906)),
        (b'J', Prob(0.003_906)),
        (b'K', Prob(0.003_906)),
        (b'L', Prob(0.003_906)),
        (b'M', Prob(0.003_906)),
        (b'N', Prob(0.003_906)),
        (b'O', Prob(0.003_906)),
        (b'P', Prob(0.003_906)),
        (b'Q', Prob(0.003_906)),
        (b'R', Prob(0.003_906)),
        (b'S', Prob(0.003_906)),
        (b'T', Prob(0.003_906)),
        (b'U', Prob(0.003_906)),
        (b'V', Prob(0.003_906)),
        (b'W', Prob(0.003_906)),
        (b'X', Prob(0.003_906)),
        (b'Y', Prob(0.003_906)),
        (b'Z', Prob(0.003_906)),
        (b'[', Prob(0.003_906)),
        (b'\x5c', Prob(0.003_906)),
        (b']', Prob(0.003_906)),
        (b'^', Prob(0.003_906)),
        (b'_', Prob(0.003_906)),
        (b'`', Prob(0.003_906)),
        (b'a', Prob(0.003_906)),
        (b'b', Prob(0.003_906)),
        (b'c', Prob(0.003_906)),
        (b'd', Prob(0.003_906)),
        (b'e', Prob(0.003_906)),
        (b'f', Prob(0.003_906)),
        (b'g', Prob(0.003_906)),
        (b'h', Prob(0.003_906)),
        (b'i', Prob(0.003_906)),
        (b'j', Prob(0.003_906)),
        (b'k', Prob(0.003_906)),
        (b'l', Prob(0.003_906)),
        (b'm', Prob(0.003_906)),
        (b'n', Prob(0.003_906)),
        (b'o', Prob(0.003_906)),
        (b'p', Prob(0.003_906)),
        (b'q', Prob(0.003_906)),
        (b'r', Prob(0.003_906)),
        (b's', Prob(0.003_906)),
        (b't', Prob(0.003_906)),
        (b'u', Prob(0.003_906)),
        (b'v', Prob(0.003_906)),
        (b'w', Prob(0.003_906)),
        (b'x', Prob(0.003_906)),
        (b'y', Prob(0.003_906)),
        (b'z', Prob(0.003_906)),
        (b'{', Prob(0.003_906)),
        (b'|', Prob(0.003_906)),
        (b'}', Prob(0.003_906)),
        (b'~', Prob(0.003_906)),
        (b'\x7f', Prob(0.003_906)),
        (b'\x80', Prob(0.003_906)),
        (b'\x81', Prob(0.003_906)),
        (b'\x82', Prob(0.003_906)),
        (b'\x83', Prob(0.003_906)),
        (b'\x84', Prob(0.003_906)),
        (b'\x85', Prob(0.003_906)),
        (b'\x86', Prob(0.003_906)),
        (b'\x87', Prob(0.003_906)),
        (b'\x88', Prob(0.003_906)),
        (b'\x89', Prob(0.003_906)),
        (b'\x8a', Prob(0.003_906)),
        (b'\x8b', Prob(0.003_906)),
        (b'\x8c', Prob(0.003_906)),
        (b'\x8d', Prob(0.003_906)),
        (b'\x8e', Prob(0.003_906)),
        (b'\x8f', Prob(0.003_906)),
        (b'\x90', Prob(0.003_906)),
        (b'\x91', Prob(0.003_906)),
        (b'\x92', Prob(0.003_906)),
        (b'\x93', Prob(0.003_906)),
        (b'\x94', Prob(0.003_906)),
        (b'\x95', Prob(0.003_906)),
        (b'\x96', Prob(0.003_906)),
        (b'\x97', Prob(0.003_906)),
        (b'\x98', Prob(0.003_906)),
        (b'\x99', Prob(0.003_906)),
        (b'\x9a', Prob(0.003_906)),
        (b'\x9b', Prob(0.003_906)),
        (b'\x9c', Prob(0.003_906)),
        (b'\x9d', Prob(0.003_906)),
        (b'\x9e', Prob(0.003_906)),
        (b'\x9f', Prob(0.003_906)),
        (b'\xa0', Prob(0.003_906)),
        (b'\xa1', Prob(0.003_906)),
        (b'\xa2', Prob(0.003_906)),
        (b'\xa3', Prob(0.003_906)),
        (b'\xa4', Prob(0.003_906)),
        (b'\xa5', Prob(0.003_906)),
        (b'\xa6', Prob(0.003_906)),
        (b'\xa7', Prob(0.003_906)),
        (b'\xa8', Prob(0.003_906)),
        (b'\xa9', Prob(0.003_906)),
        (b'\xaa', Prob(0.003_906)),
        (b'\xab', Prob(0.003_906)),
        (b'\xac', Prob(0.003_906)),
        (b'\xad', Prob(0.003_906)),
        (b'\xae', Prob(0.003_906)),
        (b'\xaf', Prob(0.003_906)),
        (b'\xb0', Prob(0.003_906)),
        (b'\xb1', Prob(0.003_906)),
        (b'\xb2', Prob(0.003_906)),
        (b'\xb3', Prob(0.003_906)),
        (b'\xb4', Prob(0.003_906)),
        (b'\xb5', Prob(0.003_906)),
        (b'\xb6', Prob(0.003_906)),
        (b'\xb7', Prob(0.003_906)),
        (b'\xb8', Prob(0.003_906)),
        (b'\xb9', Prob(0.003_906)),
        (b'\xba', Prob(0.003_906)),
        (b'\xbb', Prob(0.003_906)),
        (b'\xbc', Prob(0.003_906)),
        (b'\xbd', Prob(0.003_906)),
        (b'\xbe', Prob(0.003_906)),
        (b'\xbf', Prob(0.003_906)),
        (b'\xc0', Prob(0.003_906)),
        (b'\xc1', Prob(0.003_906)),
        (b'\xc2', Prob(0.003_906)),
        (b'\xc3', Prob(0.003_906)),
        (b'\xc4', Prob(0.003_906)),
        (b'\xc5', Prob(0.003_906)),
        (b'\xc6', Prob(0.003_906)),
        (b'\xc7', Prob(0.003_906)),
        (b'\xc8', Prob(0.003_906)),
        (b'\xc9', Prob(0.003_906)),
        (b'\xca', Prob(0.003_906)),
        (b'\xcb', Prob(0.003_906)),
        (b'\xcc', Prob(0.003_906)),
        (b'\xcd', Prob(0.003_906)),
        (b'\xce', Prob(0.003_906)),
        (b'\xcf', Prob(0.003_906)),
        (b'\xd0', Prob(0.003_906)),
        (b'\xd1', Prob(0.003_906)),
        (b'\xd2', Prob(0.003_906)),
        (b'\xd3', Prob(0.003_906)),
        (b'\xd4', Prob(0.003_906)),
        (b'\xd5', Prob(0.003_906)),
        (b'\xd6', Prob(0.003_906)),
        (b'\xd7', Prob(0.003_906)),
        (b'\xd8', Prob(0.003_906)),
        (b'\xd9', Prob(0.003_906)),
        (b'\xda', Prob(0.003_906)),
        (b'\xdb', Prob(0.003_906)),
        (b'\xdc', Prob(0.003_906)),
        (b'\xdd', Prob(0.003_906)),
        (b'\xde', Prob(0.003_906)),
        (b'\xdf', Prob(0.003_906)),
        (b'\xe0', Prob(0.003_906)),
        (b'\xe1', Prob(0.003_906)),
        (b'\xe2', Prob(0.003_906)),
        (b'\xe3', Prob(0.003_906)),
        (b'\xe4', Prob(0.003_906)),
        (b'\xe5', Prob(0.003_906)),
        (b'\xe6', Prob(0.003_906)),
        (b'\xe7', Prob(0.003_906)),
        (b'\xe8', Prob(0.003_906)),
        (b'\xe9', Prob(0.003_906)),
        (b'\xea', Prob(0.003_906)),
        (b'\xeb', Prob(0.003_906)),
        (b'\xec', Prob(0.003_906)),
        (b'\xed', Prob(0.003_906)),
        (b'\xee', Prob(0.003_906)),
        (b'\xef', Prob(0.003_906)),
        (b'\xf0', Prob(0.003_906)),
        (b'\xf1', Prob(0.003_906)),
        (b'\xf2', Prob(0.003_906)),
        (b'\xf3', Prob(0.003_906)),
        (b'\xf4', Prob(0.003_906)),
        (b'\xf5', Prob(0.003_906)),
        (b'\xf6', Prob(0.003_906)),
        (b'\xf7', Prob(0.003_906)),
        (b'\xf8', Prob(0.003_906)),
        (b'\xf9', Prob(0.003_906)),
        (b'\xfa', Prob(0.003_906)),
        (b'\xfb', Prob(0.003_906)),
        (b'\xfc', Prob(0.003_906)),
        (b'\xfd', Prob(0.003_906)),
        (b'\xfe', Prob(0.003_906)),
        (b'\xff', Prob(0.003_906)),
    ];

}
